package mj.hackpsusp25;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import com.formdev.flatlaf.FlatLightLaf; // Import FlatLaf
import java.net.URL;
import java.util.ArrayList;

public class MainFrame extends javax.swing.JFrame {
    private ArrayList<ItemEntry> newItems = new ArrayList<ItemEntry>();
    private ArrayList<ItemEntry> subItems = new ArrayList<ItemEntry>();
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        // Set FlatLaf Look and Feel
        try {
            // Use FlatLaf instead of Nimbus
            UIManager.setLookAndFeel(new FlatLightLaf());
            System.out.println("Current Look and Feel: " + UIManager.getLookAndFeel().getName());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        initComponents(); // Initialize UI components
        Color Main_Background_Color = new java.awt.Color (255, 230, 215);
        Color Background_Color = new java.awt.Color (235, 230, 230);
        Main_Pannel.setBackground(Main_Background_Color);
        Base_Pannel.setBackground(Background_Color);
        Add_Pannel.setBackground(Background_Color);
        Sub_Pannel.setBackground(Background_Color);
        Org_Pannel.setBackground(Background_Color);
        Shopping_List_Pannel.setBackground(Background_Color);
                
        DefaultTableModel displayClassesTableModel = (DefaultTableModel) addTable.getModel();
        DefaultTableModel subModel = (DefaultTableModel) subTable.getModel();
        displayClassesTableModel.setRowCount(0);
        subModel.setRowCount(0);

        addTable.setRowHeight(120);  // Set the row height to 120 (adjust as needed)
        invTable.setRowHeight(120);  // Set the row height to 120 (adjust as needed)
        subTable.setRowHeight(120);
        
    }
    
    static class ImageRenderer extends DefaultTableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

            // Check if the value is an ImageIcon and set it to the cell
            if (value instanceof ImageIcon) {
                ImageIcon imageIcon = (ImageIcon) value;
            Image image = imageIcon.getImage(); // Get the image from the icon
            Image resizedImage = image.getScaledInstance(50, 50, Image.SCALE_SMOOTH); // Resize the image
            setIcon(new ImageIcon(resizedImage)); // Set the resized image as the icon
                setText("");                 // Optionally clear the text in the cell
            } else {
                setIcon(null);  // If not an image, clear the icon
                setText("No Image"); // Optionally show a fallback text if no image
            }

            return this;
        }
    }
    
    public void rebuildFilterBoxes(){
        ArrayList<String> filters = CategoryQueries.getAllCategories();
        invFilterCmbo.setModel(new javax.swing.DefaultComboBoxModel(filters.toArray()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        Main_Pannel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        But_Shopping_List = new javax.swing.JToggleButton();
        But_Inventory = new javax.swing.JToggleButton();
        But_Add = new javax.swing.JToggleButton();
        But_Sub = new javax.swing.JToggleButton();
        But_Org = new javax.swing.JToggleButton();
        Base_Pannel = new javax.swing.JPanel();
        Inventory_Pannel = new javax.swing.JPanel();
        Inv_Search_Lable = new javax.swing.JLabel();
        Inv_Search_Box = new javax.swing.JTextField();
        Inv_Filter_Lable = new javax.swing.JLabel();
        invFilterCmbo = new javax.swing.JComboBox<>();
        invScroll = new javax.swing.JScrollPane();
        invTable = new javax.swing.JTable();
        Add_Pannel = new javax.swing.JPanel();
        Add_Barcode_Lable = new javax.swing.JLabel();
        addBarcodeBox = new javax.swing.JTextField();
        Add_Table = new javax.swing.JScrollPane();
        addTable = new javax.swing.JTable();
        But_Add_Items = new javax.swing.JButton();
        Org_Pannel = new javax.swing.JPanel();
        Sub_Pannel = new javax.swing.JPanel();
        Sub_Barcode_Lable = new javax.swing.JLabel();
        subBarcodeBox = new javax.swing.JTextField();
        Sub_Table = new javax.swing.JScrollPane();
        subTable = new javax.swing.JTable();
        But_Remove_Items = new javax.swing.JButton();
        Shopping_List_Pannel = new javax.swing.JPanel();
        But_Shopping_List_Edit = new javax.swing.JToggleButton();
        But_Shopping_List_Generate = new javax.swing.JToggleButton();
        Shopping_List_Card_Pannel = new javax.swing.JPanel();
        Shopping_List_Generate_Pannel = new javax.swing.JPanel();
        Shopping_Generated_Table = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        Shopping_Generated_Search_Lable = new javax.swing.JLabel();
        Shopping_Generated_Search_Box = new javax.swing.JTextField();
        Shopping_Generated_Filter_Lable1 = new javax.swing.JLabel();
        Shopping_GeneratedFilterCmbo1 = new javax.swing.JComboBox<>();
        Shopping_List_Edit_Pannel = new javax.swing.JPanel();
        Shopping_Edit_Table = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        Shopping_Edit_Search_Label = new javax.swing.JLabel();
        Shopping_Edit_Search_Box = new javax.swing.JTextField();
        Shopping_Edit_Filter_Label = new javax.swing.JLabel();
        Shopping_Edit_FilterCmbo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Main_Pannel.setBackground(new java.awt.Color(237, 235, 234));
        Main_Pannel.setForeground(new java.awt.Color(220, 220, 220));
        Main_Pannel.setMinimumSize(new java.awt.Dimension(0, 0));
        Main_Pannel.setPreferredSize(new java.awt.Dimension(1000, 800));
        Main_Pannel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(204, 255, 255));
        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(30, 41, 49));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("AT HOME INVENTORY MANAGMENT SYSTEM");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        Main_Pannel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 1180, 90));

        buttonGroup1.add(But_Shopping_List);
        But_Shopping_List.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        But_Shopping_List.setText("Shopping List");
        But_Shopping_List.setBorderPainted(false);
        But_Shopping_List.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Shopping_ListActionPerformed(evt);
            }
        });
        Main_Pannel.add(But_Shopping_List, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 140, 170, 60));

        buttonGroup1.add(But_Inventory);
        But_Inventory.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        But_Inventory.setSelected(true);
        But_Inventory.setText("Inventory");
        But_Inventory.setBorderPainted(false);
        But_Inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_InventoryActionPerformed(evt);
            }
        });
        Main_Pannel.add(But_Inventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 150, 60));

        buttonGroup1.add(But_Add);
        But_Add.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        But_Add.setText("Add");
        But_Add.setBorderPainted(false);
        But_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_AddActionPerformed(evt);
            }
        });
        Main_Pannel.add(But_Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 150, 60));

        buttonGroup1.add(But_Sub);
        But_Sub.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        But_Sub.setText("Sub");
        But_Sub.setBorderPainted(false);
        But_Sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_SubActionPerformed(evt);
            }
        });
        Main_Pannel.add(But_Sub, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, 150, 60));

        buttonGroup1.add(But_Org);
        But_Org.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        But_Org.setText("Org");
        But_Org.setBorderPainted(false);
        But_Org.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_OrgActionPerformed(evt);
            }
        });
        Main_Pannel.add(But_Org, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 140, 150, 60));

        Base_Pannel.setLayout(new java.awt.CardLayout());

        Inv_Search_Lable.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Inv_Search_Lable.setText("Search: ");

        Inv_Search_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inv_Search_BoxActionPerformed(evt);
            }
        });
        Inv_Search_Box.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Inv_Search_BoxKeyPressed(evt);
            }
        });

        Inv_Filter_Lable.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Inv_Filter_Lable.setText("Filters: ");

        invFilterCmbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        invTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Image", "Name", "Quantity", "Filters"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invScroll.setViewportView(invTable);

        javax.swing.GroupLayout Inventory_PannelLayout = new javax.swing.GroupLayout(Inventory_Pannel);
        Inventory_Pannel.setLayout(Inventory_PannelLayout);
        Inventory_PannelLayout.setHorizontalGroup(
            Inventory_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Inventory_PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Inv_Search_Lable, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inv_Search_Box, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(Inv_Filter_Lable, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(invFilterCmbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(Inventory_PannelLayout.createSequentialGroup()
                .addComponent(invScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 869, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1241, Short.MAX_VALUE))
        );
        Inventory_PannelLayout.setVerticalGroup(
            Inventory_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Inventory_PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Inventory_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Inv_Search_Box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Inv_Search_Lable)
                    .addComponent(Inv_Filter_Lable)
                    .addComponent(invFilterCmbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(invScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1857, Short.MAX_VALUE))
        );

        Base_Pannel.add(Inventory_Pannel, "card2");

        Add_Barcode_Lable.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Add_Barcode_Lable.setText("Barcode: ");

        addBarcodeBox.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        addBarcodeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBarcodeBoxActionPerformed(evt);
            }
        });

        addTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Image", "Name", "Quantity", "Filters"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Add_Table.setViewportView(addTable);

        But_Add_Items.setBackground(new java.awt.Color(204, 255, 204));
        But_Add_Items.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        But_Add_Items.setText("ADD ITEMS");
        But_Add_Items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Add_ItemsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Add_PannelLayout = new javax.swing.GroupLayout(Add_Pannel);
        Add_Pannel.setLayout(Add_PannelLayout);
        Add_PannelLayout.setHorizontalGroup(
            Add_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_PannelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Add_Barcode_Lable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addBarcodeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132)
                .addComponent(But_Add_Items)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(Add_PannelLayout.createSequentialGroup()
                .addComponent(Add_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 884, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1226, Short.MAX_VALUE))
        );
        Add_PannelLayout.setVerticalGroup(
            Add_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Add_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(But_Add_Items)
                    .addComponent(addBarcodeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add_Barcode_Lable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Add_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1796, Short.MAX_VALUE))
        );

        Base_Pannel.add(Add_Pannel, "card3");

        javax.swing.GroupLayout Org_PannelLayout = new javax.swing.GroupLayout(Org_Pannel);
        Org_Pannel.setLayout(Org_PannelLayout);
        Org_PannelLayout.setHorizontalGroup(
            Org_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2110, Short.MAX_VALUE)
        );
        Org_PannelLayout.setVerticalGroup(
            Org_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2330, Short.MAX_VALUE)
        );

        Base_Pannel.add(Org_Pannel, "card5");

        Sub_Barcode_Lable.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Sub_Barcode_Lable.setText("Barcode: ");

        subBarcodeBox.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        subBarcodeBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subBarcodeBoxActionPerformed(evt);
            }
        });

        subTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Image", "Name", "Quantity", "Filters"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Sub_Table.setViewportView(subTable);

        But_Remove_Items.setBackground(new java.awt.Color(255, 204, 204));
        But_Remove_Items.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        But_Remove_Items.setText("REMOVE ITEMS");
        But_Remove_Items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Remove_ItemsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Sub_PannelLayout = new javax.swing.GroupLayout(Sub_Pannel);
        Sub_Pannel.setLayout(Sub_PannelLayout);
        Sub_PannelLayout.setHorizontalGroup(
            Sub_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Sub_PannelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Sub_Barcode_Lable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(subBarcodeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(But_Remove_Items)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(Sub_PannelLayout.createSequentialGroup()
                .addComponent(Sub_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 884, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1226, Short.MAX_VALUE))
        );
        Sub_PannelLayout.setVerticalGroup(
            Sub_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Sub_PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Sub_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(But_Remove_Items)
                    .addComponent(subBarcodeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sub_Barcode_Lable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Sub_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1796, Short.MAX_VALUE))
        );

        Base_Pannel.add(Sub_Pannel, "card6");

        buttonGroup2.add(But_Shopping_List_Edit);
        But_Shopping_List_Edit.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        But_Shopping_List_Edit.setText("Edit");
        But_Shopping_List_Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Shopping_List_EditActionPerformed(evt);
            }
        });

        buttonGroup2.add(But_Shopping_List_Generate);
        But_Shopping_List_Generate.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        But_Shopping_List_Generate.setSelected(true);
        But_Shopping_List_Generate.setText("Generage");
        But_Shopping_List_Generate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                But_Shopping_List_GenerateActionPerformed(evt);
            }
        });

        Shopping_List_Card_Pannel.setLayout(new java.awt.CardLayout());

        Shopping_List_Generate_Pannel.setBackground(new java.awt.Color(204, 204, 204));
        Shopping_List_Generate_Pannel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Image", "Name", "Filters", "Number Needed"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Shopping_Generated_Table.setViewportView(jTable5);

        Shopping_Generated_Search_Lable.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Shopping_Generated_Search_Lable.setText("Search: ");

        Shopping_Generated_Search_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Shopping_Generated_Search_BoxActionPerformed(evt);
            }
        });

        Shopping_Generated_Filter_Lable1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Shopping_Generated_Filter_Lable1.setText("Filters: ");

        Shopping_GeneratedFilterCmbo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout Shopping_List_Generate_PannelLayout = new javax.swing.GroupLayout(Shopping_List_Generate_Pannel);
        Shopping_List_Generate_Pannel.setLayout(Shopping_List_Generate_PannelLayout);
        Shopping_List_Generate_PannelLayout.setHorizontalGroup(
            Shopping_List_Generate_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Shopping_Generated_Table, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addGroup(Shopping_List_Generate_PannelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(Shopping_Generated_Search_Lable, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Shopping_Generated_Search_Box, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(Shopping_Generated_Filter_Lable1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Shopping_GeneratedFilterCmbo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Shopping_List_Generate_PannelLayout.setVerticalGroup(
            Shopping_List_Generate_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Shopping_List_Generate_PannelLayout.createSequentialGroup()
                .addGap(0, 28, Short.MAX_VALUE)
                .addGroup(Shopping_List_Generate_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Shopping_Generated_Search_Box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Shopping_Generated_Search_Lable)
                    .addComponent(Shopping_Generated_Filter_Lable1)
                    .addComponent(Shopping_GeneratedFilterCmbo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(Shopping_Generated_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Shopping_List_Card_Pannel.add(Shopping_List_Generate_Pannel, "card3");

        Shopping_List_Edit_Pannel.setBackground(new java.awt.Color(204, 204, 204));
        Shopping_List_Edit_Pannel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Image", "Name", "Filters", "Desired Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Shopping_Edit_Table.setViewportView(jTable4);

        Shopping_Edit_Search_Label.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Shopping_Edit_Search_Label.setText("Search: ");

        Shopping_Edit_Search_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Shopping_Edit_Search_BoxActionPerformed(evt);
            }
        });

        Shopping_Edit_Filter_Label.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        Shopping_Edit_Filter_Label.setText("Filters: ");

        Shopping_Edit_FilterCmbo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout Shopping_List_Edit_PannelLayout = new javax.swing.GroupLayout(Shopping_List_Edit_Pannel);
        Shopping_List_Edit_Pannel.setLayout(Shopping_List_Edit_PannelLayout);
        Shopping_List_Edit_PannelLayout.setHorizontalGroup(
            Shopping_List_Edit_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Shopping_Edit_Table, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(Shopping_List_Edit_PannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Shopping_Edit_Search_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Shopping_Edit_Search_Box, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(Shopping_Edit_Filter_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Shopping_Edit_FilterCmbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(508, Short.MAX_VALUE))
        );
        Shopping_List_Edit_PannelLayout.setVerticalGroup(
            Shopping_List_Edit_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Shopping_List_Edit_PannelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(Shopping_List_Edit_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(Shopping_Edit_Search_Label)
                    .addComponent(Shopping_Edit_Search_Box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Shopping_Edit_Filter_Label)
                    .addComponent(Shopping_Edit_FilterCmbo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Shopping_Edit_Table, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
        );

        Shopping_List_Card_Pannel.add(Shopping_List_Edit_Pannel, "card2");

        javax.swing.GroupLayout Shopping_List_PannelLayout = new javax.swing.GroupLayout(Shopping_List_Pannel);
        Shopping_List_Pannel.setLayout(Shopping_List_PannelLayout);
        Shopping_List_PannelLayout.setHorizontalGroup(
            Shopping_List_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Shopping_List_PannelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(But_Shopping_List_Generate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(But_Shopping_List_Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(Shopping_List_PannelLayout.createSequentialGroup()
                .addComponent(Shopping_List_Card_Pannel, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1110, Short.MAX_VALUE))
        );
        Shopping_List_PannelLayout.setVerticalGroup(
            Shopping_List_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Shopping_List_PannelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(Shopping_List_PannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(But_Shopping_List_Generate)
                    .addComponent(But_Shopping_List_Edit))
                .addGap(55, 55, 55)
                .addComponent(Shopping_List_Card_Pannel, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1549, Short.MAX_VALUE))
        );

        Base_Pannel.add(Shopping_List_Pannel, "card6");

        Main_Pannel.add(Base_Pannel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 2110, 2330));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Main_Pannel, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main_Pannel, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void But_Shopping_ListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Shopping_ListActionPerformed
        Add_Pannel.setVisible(false);
        Sub_Pannel.setVisible(false);
        Org_Pannel.setVisible(false);
        Shopping_List_Pannel.setVisible(true);
        Inventory_Pannel.setVisible(false);
    }//GEN-LAST:event_But_Shopping_ListActionPerformed

    private void But_InventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_InventoryActionPerformed
        Add_Pannel.setVisible(false);
        Sub_Pannel.setVisible(false);
        Org_Pannel.setVisible(false);
        Shopping_List_Pannel.setVisible(false);
        Inventory_Pannel.setVisible(true);
        
        ArrayList<ItemEntry> allItems = ItemQueries.getAllItems();
        DefaultTableModel displayClassesTableModel = (DefaultTableModel) invTable.getModel();
        displayClassesTableModel.setRowCount(0);
        for(ItemEntry i: allItems){
            Object[] rowData = new Object[4];
            try {
                    // Load the image from the URL or file path
                    URL imageUrl = new URL(i.getImageUrl()); // Assuming getImageUrl() returns a valid URL
                    ImageIcon imageIcon = new ImageIcon(imageUrl);
                    rowData[0] = imageIcon;  // Set the ImageIcon in rowData[0]
                } catch (Exception e) {
                    rowData[0] = null; // In case the image URL is invalid or there's an error
                    e.printStackTrace();
                }
            
            rowData[1] = i.getName();
            rowData[2] = i.getQuantity();
            rowData[3] = null;
            displayClassesTableModel.addRow(rowData);

            
        }
        invTable.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer());

        
    }//GEN-LAST:event_But_InventoryActionPerformed

    private void But_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_AddActionPerformed
        Add_Pannel.setVisible(true);
        Sub_Pannel.setVisible(false);
        Org_Pannel.setVisible(false);
        Shopping_List_Pannel.setVisible(false);
        Inventory_Pannel.setVisible(false);
    }//GEN-LAST:event_But_AddActionPerformed

    private void But_SubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_SubActionPerformed
        Add_Pannel.setVisible(false);
        Sub_Pannel.setVisible(true);
        Org_Pannel.setVisible(false);
        Shopping_List_Pannel.setVisible(false);
        Inventory_Pannel.setVisible(false);
    }//GEN-LAST:event_But_SubActionPerformed

    private void Inv_Search_BoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inv_Search_BoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Inv_Search_BoxActionPerformed

    private void addBarcodeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBarcodeBoxActionPerformed
        String barcode = addBarcodeBox.getText();
        DefaultTableModel displayClassesTableModel = (DefaultTableModel) addTable.getModel();

        try{
            ItemEntry item = BarcodeInterface.getProduct(barcode); 
            boolean itemExists = false;
            
            for(int i=0; i<newItems.size(); i++){
                if(newItems.get(i).getBarcode().equals(barcode)){ //old item, so add quantity
                    itemExists = true;
                    newItems.get(i).setQuantity(newItems.get(i).getQuantity()+1);
                    displayClassesTableModel.setValueAt(newItems.get(i).getQuantity(), i, 2);
                }
            }
            
            if(!itemExists && item!=null){ //new item
                newItems.add(item);
                Object[] rowData = new Object[4];
                
                try {
                    // Load the image from the URL or file path
                    URL imageUrl = new URL(item.getImageUrl()); // Assuming getImageUrl() returns a valid URL
                    ImageIcon imageIcon = new ImageIcon(imageUrl);
                    rowData[0] = imageIcon;  // Set the ImageIcon in rowData[0]
                } catch (Exception e) {
                    rowData[0] = null; // In case the image URL is invalid or there's an error
                    e.printStackTrace();
                }
                
                rowData[1] = item.getName();
                rowData[2] = item.getQuantity();
                rowData[3] = null;
                displayClassesTableModel.addRow(rowData);
            }
            
            
            addTable.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer());
            
            addBarcodeBox.setText("");
            
        } catch(Exception e){
        
        }
    }//GEN-LAST:event_addBarcodeBoxActionPerformed

    private void But_OrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_OrgActionPerformed
        Add_Pannel.setVisible(false);
        Sub_Pannel.setVisible(false);
        Org_Pannel.setVisible(true);
        Shopping_List_Pannel.setVisible(false);
        Inventory_Pannel.setVisible(false);
    }//GEN-LAST:event_But_OrgActionPerformed

    private void But_Shopping_List_EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Shopping_List_EditActionPerformed
        Shopping_List_Edit_Pannel.setVisible(true);
        Shopping_List_Generate_Pannel.setVisible(false);
    }//GEN-LAST:event_But_Shopping_List_EditActionPerformed

    private void But_Shopping_List_GenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Shopping_List_GenerateActionPerformed
        Shopping_List_Edit_Pannel.setVisible(false);
        Shopping_List_Generate_Pannel.setVisible(true);
    }//GEN-LAST:event_But_Shopping_List_GenerateActionPerformed

    private void Shopping_Edit_Search_BoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Shopping_Edit_Search_BoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Shopping_Edit_Search_BoxActionPerformed

    private void subBarcodeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subBarcodeBoxActionPerformed
        String barcode = subBarcodeBox.getText();
        DefaultTableModel displayClassesTableModel = (DefaultTableModel) subTable.getModel();

        try{
            ItemEntry item = BarcodeInterface.getProduct(barcode); 
            boolean itemExists = false;
            
            for(int i=0; i<subItems.size(); i++){
                if(subItems.get(i).getBarcode().equals(barcode)){ //old item, so add quantity
                    itemExists = true;
                    subItems.get(i).setQuantity(subItems.get(i).getQuantity()+1);
                    displayClassesTableModel.setValueAt(subItems.get(i).getQuantity(), i, 2);
                }
            }
            
            if(!itemExists){ //new item
                subItems.add(item);
                Object[] rowData = new Object[4];
                
                try {
                    // Load the image from the URL or file path
                    URL imageUrl = new URL(item.getImageUrl()); // Assuming getImageUrl() returns a valid URL
                    ImageIcon imageIcon = new ImageIcon(imageUrl);
                    rowData[0] = imageIcon;  // Set the ImageIcon in rowData[0]
                } catch (Exception e) {
                    rowData[0] = null; // In case the image URL is invalid or there's an error
                    e.printStackTrace();
                }
                
                rowData[1] = item.getName();
                rowData[2] = item.getQuantity();
                rowData[3] = null;
                displayClassesTableModel.addRow(rowData);
            }
            
            
            subTable.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer());
            
            subBarcodeBox.setText("");
            
        } catch(Exception e){
        
        }
    }//GEN-LAST:event_subBarcodeBoxActionPerformed

    private void But_Add_ItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Add_ItemsActionPerformed
        for(ItemEntry i : newItems){
            ItemQueries.addItem(i);
        }
        newItems = new ArrayList<ItemEntry>();
        DefaultTableModel displayClassesTableModel = (DefaultTableModel) addTable.getModel();
        displayClassesTableModel.setRowCount(0);

        
    }//GEN-LAST:event_But_Add_ItemsActionPerformed

    private void Shopping_Generated_Search_BoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Shopping_Generated_Search_BoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Shopping_Generated_Search_BoxActionPerformed

    private void But_Remove_ItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_But_Remove_ItemsActionPerformed
        for(ItemEntry i : subItems){
            ItemEntry old = ItemQueries.getItemByBarcode(i.getBarcode());
            if(old!=null){
                old.setQuantity(old.getQuantity()-i.getQuantity());
            }
            
            ItemQueries.updateItem(old);
        }
        subItems = new ArrayList<ItemEntry>();
        DefaultTableModel displayClassesTableModel = (DefaultTableModel) subTable.getModel();
        displayClassesTableModel.setRowCount(0);
    }//GEN-LAST:event_But_Remove_ItemsActionPerformed

    private void Inv_Search_BoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Inv_Search_BoxKeyPressed
        String search = Inv_Search_Box.getText();
        ArrayList<ItemEntry> results = ItemQueries.searchItemsByName(search);
        
        DefaultTableModel displayClassesTableModel = (DefaultTableModel) invTable.getModel();
        displayClassesTableModel.setRowCount(0);
        for(ItemEntry i: results){
            Object[] rowData = new Object[4];
            try {
                    // Load the image from the URL or file path
                    URL imageUrl = new URL(i.getImageUrl()); // Assuming getImageUrl() returns a valid URL
                    ImageIcon imageIcon = new ImageIcon(imageUrl);
                    rowData[0] = imageIcon;  // Set the ImageIcon in rowData[0]
                } catch (Exception e) {
                    rowData[0] = null; // In case the image URL is invalid or there's an error
                    e.printStackTrace();
                }
            
            rowData[1] = i.getName();
            rowData[2] = i.getQuantity();
            rowData[3] = null;
            displayClassesTableModel.addRow(rowData);

            
        }
        invTable.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer());
    }//GEN-LAST:event_Inv_Search_BoxKeyPressed

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Add_Barcode_Lable;
    private javax.swing.JPanel Add_Pannel;
    private javax.swing.JScrollPane Add_Table;
    private javax.swing.JPanel Base_Pannel;
    private javax.swing.JToggleButton But_Add;
    private javax.swing.JButton But_Add_Items;
    private javax.swing.JToggleButton But_Inventory;
    private javax.swing.JToggleButton But_Org;
    private javax.swing.JButton But_Remove_Items;
    private javax.swing.JToggleButton But_Shopping_List;
    private javax.swing.JToggleButton But_Shopping_List_Edit;
    private javax.swing.JToggleButton But_Shopping_List_Generate;
    private javax.swing.JToggleButton But_Sub;
    private javax.swing.JLabel Inv_Filter_Lable;
    private javax.swing.JTextField Inv_Search_Box;
    private javax.swing.JLabel Inv_Search_Lable;
    private javax.swing.JPanel Inventory_Pannel;
    private javax.swing.JPanel Main_Pannel;
    private javax.swing.JPanel Org_Pannel;
    private javax.swing.JComboBox<String> Shopping_Edit_FilterCmbo;
    private javax.swing.JLabel Shopping_Edit_Filter_Label;
    private javax.swing.JTextField Shopping_Edit_Search_Box;
    private javax.swing.JLabel Shopping_Edit_Search_Label;
    private javax.swing.JScrollPane Shopping_Edit_Table;
    private javax.swing.JComboBox<String> Shopping_GeneratedFilterCmbo1;
    private javax.swing.JLabel Shopping_Generated_Filter_Lable1;
    private javax.swing.JTextField Shopping_Generated_Search_Box;
    private javax.swing.JLabel Shopping_Generated_Search_Lable;
    private javax.swing.JScrollPane Shopping_Generated_Table;
    private javax.swing.JPanel Shopping_List_Card_Pannel;
    private javax.swing.JPanel Shopping_List_Edit_Pannel;
    private javax.swing.JPanel Shopping_List_Generate_Pannel;
    private javax.swing.JPanel Shopping_List_Pannel;
    private javax.swing.JLabel Sub_Barcode_Lable;
    private javax.swing.JPanel Sub_Pannel;
    private javax.swing.JScrollPane Sub_Table;
    private javax.swing.JTextField addBarcodeBox;
    private javax.swing.JTable addTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> invFilterCmbo;
    private javax.swing.JScrollPane invScroll;
    private javax.swing.JTable invTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField subBarcodeBox;
    private javax.swing.JTable subTable;
    // End of variables declaration//GEN-END:variables
}
